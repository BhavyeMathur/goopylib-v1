# This workflow runs goopylib's C++ GTests

name: "Google Tests"
run-name: ${{ github.actor }} running C++ GTests

on:
  workflow_dispatch:

  workflow_run:
    workflows: [ Build Binary ]
    types:
      - completed

  push:
    paths:
      - .github/workflows/google-test.yml
      - tests/**/CMakeLists.txt

  pull_request:
    paths:
      - .github/workflows/google-test.yml
      - tests/**/CMakeLists.txt

env:
  BUILD_TYPE: Release

jobs:
  build-cmake:
    name: Build with CMake on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Run tests
        shell: cmd
        run: "D:/a/goopylib/goopylib/tests/core_tests.exe" --gtest_filter=* --gtest_color=no

#      - name: Install 7zip
#        run: choco install 7zip.install
#
#      - name: Install Mesa
#        shell: cmd
#        run: |
#          curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/20.3.2/mesa3d-20.3.2-release-msvc.7z
#          "C:\Program Files\7-Zip\7z.exe" x mesa.7z
#          mklink opengl32.dll "x64\opengl32.dll"
#          mklink libglapi.dll "x64\libglapi.dll"
#        working-directory: tests/
#
#      - name: Build goopylib tests
#        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 8 --target core_tests
